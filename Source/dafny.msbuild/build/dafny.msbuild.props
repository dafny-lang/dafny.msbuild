<Project TreatAsLocalProperty="TaskFolder;TaskAssembly">
    <PropertyGroup>
        <!-- Fall back to the bin directory to make local testing much easier -->
        <TaskAssembly Condition="Exists('$(MSBuildThisFileDirectory)..\tasks')">$(MSBuildThisFileDirectory)..\tasks\netcoreapp3.0\dafny.msbuild.dll</TaskAssembly>
        <TaskAssembly Condition="!Exists('$(MSBuildThisFileDirectory)..\tasks')">$(MSBuildThisFileDirectory)..\bin\Debug\netcoreapp3.0\dafny.msbuild.dll</TaskAssembly>

        <Dafny Condition="'$(OS)' == 'Windows_NT'">Dafny.exe</Dafny>
        <Dafny Condition="'$(OS)' != 'Windows_NT'">dafny</Dafny>

        <!-- 
        TODO: This is to avoid lots of warnings from the Dafny-generated code
        for things like unused variables and unreachable code. It's unfortunate
        that we then won't get these warnings for hand-written C# code either, though.
        We should at least find a way to share this list definition with the
        Dafny-to-C# compiler.
         -->
        <NoWarn>0164;0219;1717;0162;0168</NoWarn>

        <!-- 
        Defaulting to an empty string means we assume that the Dafny
        Binaries directory is already on your $PATH
        -->
        <DafnyBinariesDir></DafnyBinariesDir>
    </PropertyGroup>

    <ItemGroup>
        <DafnySource Include="**/*.dfy" />
    </ItemGroup>

    <ItemGroup>
        <VerifyDafnyPassthrough Include="timeLimit:30" />
    </ItemGroup>

    <UsingTask TaskName="DafnyMSBuild.DafnyVerifyTask" AssemblyFile="$(TaskAssembly)"/>
</Project>
